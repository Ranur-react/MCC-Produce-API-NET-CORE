#pragma checksum "D:\MCC\MVC\API2\API\Web Client Employee\Views\Task\DataTable.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7b27f22b46e065bd53286bdcba2c9c0f0afd08c6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Task_DataTable), @"mvc.1.0.view", @"/Views/Task/DataTable.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\MCC\MVC\API2\API\Web Client Employee\Views\_ViewImports.cshtml"
using Web_Client_Employee;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\MCC\MVC\API2\API\Web Client Employee\Views\_ViewImports.cshtml"
using Web_Client_Employee.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7b27f22b46e065bd53286bdcba2c9c0f0afd08c6", @"/Views/Task/DataTable.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9575b606de4d8de6d57f884318209a743d29b3de", @"/Views/_ViewImports.cshtml")]
    public class Views_Task_DataTable : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\MCC\MVC\API2\API\Web Client Employee\Views\Task\DataTable.cshtml"
  
    Layout = "_LayoutLatihan";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<table class=""table table-hover "" id=""EmployeeTable"">
    <thead>
        <tr>
            <th scope=""col"">No.</th>
            <th scope=""col"">Name</th>
            <th scope=""col"">Phone</th>
            <th scope=""col"">Gender</th>
            <th scope=""col"">E-mail</th>
            <th scope=""col"">Birth Date</th>
            <th scope=""col"">Sallary</th>
            <th scope=""col"">Gpa</th>
            <th scope=""col"">Degre</th>
            <th scope=""col"">University Name</th>
            <th scope=""col"">Actions</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th scope=""row"">1</th>
            <td>x</td>
            <td>Otto</td>
            <td>X</td>
        </tr>
    </tbody>
</table>
");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
<script type=""text/javascript"" charset=""utf8"" src=""https://code.jquery.com/jquery-3.5.1.js""></script>
<script type=""text/javascript"" charset=""utf8"" src=""https://cdn.datatables.net/1.11.3/js/jquery.dataTables.js""></script>
<script type=""text/javascript"" charset=""utf8"" src=""https://cdn.datatables.net/buttons/2.1.0/js/dataTables.buttons.min.js""></script>
<script type=""text/javascript"" charset=""utf8"" src=""https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js""></script>
<script type=""text/javascript"" charset=""utf8"" src=""https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js""></script>
<script type=""text/javascript"" charset=""utf8"" src=""https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js""></script>
<script type=""text/javascript"" charset=""utf8"" src=""https://cdn.datatables.net/buttons/2.1.0/js/buttons.html5.min.js""></script>
<script type=""text/javascript"" charset=""utf8"" src=""https://cdn.datatables.net/buttons/2.1.0/js/buttons.print.min.js""></script>
");
            }
            );
            WriteLiteral(@"
<script>
    var formatter = new Intl.NumberFormat('en-US', {
        style: 'currency',
        currency: 'IDR'
    });



    $(document).ready(function () {
        $('#EmployeeTable').DataTable({

            'ajax': {
                'url': ""https://localhost:44321/api/Employees/RegisteredData"",
                'dataType': 'json',
                'dataSrc': 'result',
            },
            dom: 'Bfrtip',
            buttons: [
                'copy', 'csv',
                {
                    extend: 'excelHtml5',
                    exportOptions: {
                        columns: [0, ':visible']
                    }
                }
                , 'pdf', 'print'
            ],

            'columns': [
                {
                    'data': null,
                    'render': (data, type, row, meta) => {
                        return (meta.row + meta.settings._iDisplayStart + 1) + ""."";
                    }
                },
                {
 ");
            WriteLiteral(@"                   'data': 'fullName'
                },
                {
                    'data': 'phoneNumber'
                },
                {
                    'data': 'gender',
                    'bSortable': false

                },
                {
                    'data': 'email'
                },
                {
                    'data': null,
                    'render': (data, type, row) => {
                        var dateGet = new Date(row['birthDate']);
                        return dateGet.toLocaleDateString();
                    }
                },
                {
                    'data': null,
                    'render': (data, type, row) => formatter.format(row['salary'])
                },
                {
                    'data': 'gpa'
                },
                {
                    'data': 'degree'
                },
                {
                    'data': 'universityName'
                },
             ");
            WriteLiteral(@"   {
                    'data': null,
                    'render': (data, type, row) => {
                        return `<div class=""btn-group"" role=""group"" aria-label=""Basic example"">
                                  <button type=""button"" class=""btn btn-secondary"">Edit</button>
                                  <button type=""button"" class=""btn btn-secondary"">Remove</button>
                                </div>`
                    },
                    'bSortable': false
                }

            ],


        });
    });
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
